% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/discover_indirect_effects.R
\name{discover_all_indirect_effects}
\alias{discover_all_indirect_effects}
\title{Discover All Indirect Effects (x.boot-inspired)}
\usage{
discover_all_indirect_effects(
  model,
  max_chain_length = 5,
  exclude_bidirectional = TRUE,
  computational_limit = 1000,
  min_chain_length = 2,
  verbose = FALSE
)
}
\arguments{
\item{model}{A lavaan model syntax string or fitted lavaan object}

\item{max_chain_length}{Maximum length of indirect effect chains to discover.
Default is 5. Higher values increase computational complexity.}

\item{exclude_bidirectional}{Logical, whether to exclude bidirectional paths
(covariances) from indirect effect chains. Default is TRUE.}

\item{computational_limit}{Maximum number of indirect effects to discover
before stopping (performance safeguard). Default is 1000.}

\item{min_chain_length}{Minimum length of indirect effect chains. Default is 2
(at least one mediator).}

\item{verbose}{Logical, whether to print progress information. Default is FALSE.}
}
\value{
A named list suitable for use with write_lavaan()'s indirect argument,
containing all discovered indirect effects as path products.
}
\description{
Automatically discovers all possible indirect effects in a
structural equation model using graph traversal algorithms. This function
is inspired by Christian Dorri's x.boot extension concept for comprehensive
indirect effect identification.
}
\details{
This function implements a comprehensive indirect effect discovery algorithm
that:
\enumerate{
\item Parses the lavaan model into a directed graph structure
\item Identifies all possible indirect pathways using depth-first search
\item Generates lavaan syntax for discovered indirect effects
\item Provides performance safeguards for large models
}

Unlike the existing write_lavaan() automatic indirect effects (which require
structured IV/M/DV specification), this function discovers ALL indirect
effects automatically, similar to commercial SEM software like Amos.

Computational complexity increases exponentially with model size and
max_chain_length. Use computational_limit and max_chain_length to control
performance.
}
\examples{
\dontrun{
# Simple mediation model
model_syntax <- '
  # Regressions
  m ~ a*x
  y ~ b*m + c*x
'

# Discover all indirect effects
indirect_effects <- discover_all_indirect_effects(model_syntax)

# Use with write_lavaan()
full_model <- write_lavaan(
  custom = model_syntax,
  indirect = indirect_effects
)
}
}
